name: Node.js Front - Build and Push to ECR

on:
  push:
    branches:
      - main
    paths:
      - "frontend/**"   # only trigger if frontend changes
  workflow_dispatch:   # allow manual trigger

permissions:
  id-token: write   # âœ… Required for OIDC auth
  contents: read 

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  IMAGE_REPO_NAME: ${{ secrets.IMAGE_REPO_NAME }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4
      
      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      # Log in to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Build, tag, and push Docker image
      - name: Build, Tag, and Push Docker image
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}   # short git commit hash
          ECR_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_REPO_NAME}

          echo "Building Docker image..."
          docker build -t $IMAGE_REPO_NAME ./frontend

          echo "Tagging Docker image..."
          docker tag $IMAGE_REPO_NAME:latest $ECR_URI:$IMAGE_TAG
          docker tag $IMAGE_REPO_NAME:latest $ECR_URI:latest

          echo "Pushing Docker image to ECR..."
          docker push $ECR_URI:$IMAGE_TAG
          docker push $ECR_URI:latest
